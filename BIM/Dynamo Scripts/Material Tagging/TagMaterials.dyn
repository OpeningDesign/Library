<Workspace Version="1.3.3.4111" X="707.95740441624" Y="47.3892288358534" zoom="0.679624216903676" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="100" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="FamilySymbol" resolvedName="Revit.Elements.FamilySymbol" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="Point" resolvedName="Autodesk.DesignScript.Geometry.Point" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Math" resolvedName="DSCore.Math" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Vector" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="PolyCurve.ByJoinedCurves" resolvedName="Autodesk.DesignScript.Geometry.PolyCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Transaction.st" resolvedName="Revit.Transaction.Transaction" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="Rectangle" resolvedName="Autodesk.DesignScript.Geometry.Rectangle" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Line" resolvedName="Autodesk.DesignScript.Geometry.Line" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="DSCore.Object" resolvedName="DSCore.Object" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="NurbsCurve" resolvedName="Autodesk.DesignScript.Geometry.NurbsCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="NurbsCurve.Z" resolvedName="Autodesk.DesignScript.Geometry.NurbsCurve" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Thread" resolvedName="DSCore.Thread" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="ModelCurve" resolvedName="Revit.Elements.ModelCurve" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="Category" resolvedName="Revit.Elements.Category" assemblyName="RevitNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <CoreNodeModels.Input.DoubleSlider guid="97ddea52-f3b9-4091-b7f4-ef9aa6cfc501" type="CoreNodeModels.Input.DoubleSlider" nickname="View depth cut-off distance [feet]" x="-229.247442774443" y="123.835711867558" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Double>5.001</System.Double>
      <Range min="0.001" max="15" step="0.1" />
    </CoreNodeModels.Input.DoubleSlider>
    <CoreNodeModels.Input.BoolSelector guid="a1b2bdb2-2b58-47d6-9893-bbec75dc83cf" type="CoreNodeModels.Input.BoolSelector" nickname="Add an Elbow" x="-229.247442774443" y="270.696607592447" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <DSRevitNodesUI.FamilyTypes guid="e2ca6d49-fc50-4990-a152-972e983e3105" type="DSRevitNodesUI.FamilyTypes" nickname="Right Material Tag Type" x="243.0974902379" y="373.860610342805" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" index="365:OD_Material Tag:RIGHT" />
    <DSRevitNodesUI.FamilyTypes guid="14d7e011-6fb5-4e58-bda7-a1e4198d3fee" type="DSRevitNodesUI.FamilyTypes" nickname="Left Material Tag Type" x="243.0974902379" y="457.002245466941" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" index="364:OD_Material Tag:LEFT" />
    <PythonNodeModels.PythonNode guid="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" type="PythonNodeModels.PythonNode" nickname="Tag Creation Script" x="680.581730692949" y="92.6225814487399" isVisible="true" isUpstreamVisible="false" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="6">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <PortInfo index="4" default="False" />
      <PortInfo index="5" default="False" />
      <Script>import clr
from math import floor

clr.AddReference("RevitServices")
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
app = DocumentManager.Instance.CurrentUIApplication.Application
uiapp = DocumentManager.Instance.CurrentUIApplication

clr.AddReference("RevitAPI")
import  Autodesk.Revit.DB as DB

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference('ProtoGeometry')
import Autodesk.DesignScript.Geometry as DS

clr.AddReference("System")
import System
from System.Collections.Generic import List
PF_path = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)
Lib_path = '\IronPython 2.7\Lib'
import sys
sys.path.append("%s%s" % (PF_path, Lib_path))
import ctypes

def getFirstSolid(geo):
	for g in geo:
		if isinstance(g, DB.GeometryInstance):
			return getFirstSolid(g.GetInstanceGeometry())
		else:
			v = getattr(g, "Volume", 0)
			if v != 0:
				return g

def getSolidBoundPts(s):
	x, y, z = [], [], []
	for e in s.Edges:
		p = e.Evaluate(0)
		x.append(p.X)
		y.append(p.Y)
		z.append(p.Z)
	
	return DB.XYZ(min(x), min(y), min(z)), DB.XYZ(max(x), max(y), max(z))

SetForegroundWindow = ctypes.windll.user32.SetForegroundWindow
SendKeys = ctypes.windll.user32.keybd_event

def UP1():
	SendKeys(0x26, 0, 0, 0)
	SendKeys(0x26, 0, 0x0002, 0)
def DN1():
	SendKeys(0x28, 0, 0, 0)
	SendKeys(0x28, 0, 0x0002, 0)

# INPUT
Cat1, cutoff_depth, TAG_PLACEMENT_MODE, _, IfcTag, IfcTagLeft = UnwrapElement(IN)
IfcTagId, IfcTagLeftId = IfcTag.Id, IfcTagLeft.Id

# get active view's data
view = doc.ActiveView
def pullOntoViewPlane(pt, n=view.ViewDirection, o=view.Origin):
	d = n.DotProduct(o) - n.DotProduct(pt)
	return pt + n * d

# temporarily modify the view's clip depth to get the visible elements
TransactionManager.Instance.EnsureInTransaction(doc)

cropMan = view.GetCropRegionShapeManager()
if cropMan.Split:
	with DB.SubTransaction(doc) as subT:
		subT.Start()
		min0, max0 = cropMan.GetSplitRegionMinimum(0), cropMan.GetSplitRegionMaximum(0)
		min1, max1 = cropMan.GetSplitRegionMinimum(1), cropMan.GetSplitRegionMaximum(1)
		cropMan.RemoveSplit()
		crop1 = cropMan.GetCropShape()
		subT.RollBack()
else:
	crop1 = cropMan.GetCropShape()

fec1 = DB.FilteredElementCollector(doc, view.Id).OfCategoryId(Cat1.Id)
VisibleEl = [e for e in fec1]

# get the crop region and shrink appropriately to the tagscale
cropSolid = DB.GeometryCreationUtilities.CreateExtrusionGeometry(crop1, view.ViewDirection, cutoff_depth)

cropCenter = crop1[0].GetPlane().Origin
viewRight = view.RightDirection
cropHalfWidth = abs(view.CropBox.Max.X - view.CropBox.Min.X) / 2 + 0.5 # a bit of a buffer
cropCenter_dot = viewRight.DotProduct(cropCenter)

# collect all existing tags in the view and find their host elements
ViewTags = DB.FilteredElementCollector(doc, view.Id).OfClass(DB.IndependentTag)
TaggedElId = set(t.TaggedLocalElementId.IntegerValue for t in ViewTags)

geoOpt = DB.Options()
intOptions = DB.SolidCurveIntersectionOptions()
intOptions.ResultType = DB.SolidCurveIntersectionMode.CurveSegmentsInside

# find a point inside each element. Elements that are already
# tagged or that are beyond the crop's depth will be ignored
toTag = []
avrgPt, avrgCount = DB.XYZ.Zero, 0
for e in VisibleEl:
	if e.Id.IntegerValue in TaggedElId:
		continue
	
	elSolid = getFirstSolid(e.Geometry[geoOpt])
	intersectedSolid = DB.BooleanOperationsUtils.ExecuteBooleanOperation(
		cropSolid, elSolid, DB.BooleanOperationsType.Intersect)
	if intersectedSolid.Volume == 0:
		continue
	a, b = getSolidBoundPts(intersectedSolid)
	a, b = pullOntoViewPlane(a), pullOntoViewPlane(b)
	l = DB.Line.CreateBound(a, b)
	xResult = intersectedSolid.IntersectWithCurve(l, intOptions)
	l.Dispose()
	
	curves = [c for c in xResult]
	curves.sort(key=lambda c: c.Length)
	tagPt = curves[-1].Evaluate(0.5, 1)
	toTag.append((e, tagPt))
	avrgPt += tagPt
	avrgCount += 1

# place the actual tags and compute the final tag position
tm1 = DB.TagMode.TM_ADDBY_MATERIAL
to1 = DB.TagOrientation.Horizontal
tags, areRight = [], []
if avrgCount:
	avrgPt /= avrgCount
	avrgPt_dot = viewRight.DotProduct(avrgPt)
	for elem, tagPt in toTag:
		tagPt_dot = viewRight.DotProduct(tagPt)
		distToCenter = cropCenter_dot - tagPt_dot
		distToAvrg = avrgPt_dot - tagPt_dot
		rightOfCenter = distToCenter &lt; 0
		
		if TAG_PLACEMENT_MODE == 0:
			shiftRight = distToAvrg &lt; 0
		elif TAG_PLACEMENT_MODE == 1:
			shiftRight = False
		else:
			shiftRight = True
		
		mul = distToCenter + cropHalfWidth if shiftRight else distToCenter - cropHalfWidth
		headPt = tagPt + mul * viewRight
		
		tag = DB.IndependentTag.Create(doc, view.Id, DB.Reference(e), 1, tm1, to1, tagPt)
		typeId = IfcTagId if shiftRight else IfcTagLeftId
		tag.ChangeTypeId(typeId)
		tag.LeaderEnd = tagPt
		tag.TagHeadPosition = headPt
		tags.append(tag)
		areRight.append(shiftRight)

TransactionManager.Instance.TransactionTaskDone()

geoOpt.Dispose()
intOptions.Dispose()

tagsId = List[DB.ElementId](t.Id for t in tags)
uidoc.Selection.SetElementIds(tagsId)

if "2019" in app.VersionNumber:
	rvt_winH = uiapp.MainWindowHandle
else:
	rvt_proc = System.Diagnostics.Process.GetProcessesByName("Revit")
	rvt_winH = rvt_proc[0].MainWindowHandle
active_win = SetForegroundWindow(rvt_winH)
UP1()
DN1()

OUT = [t.Id.IntegerValue for t in tags], areRight, [c.ToProtoType(1) for c in crop1[0]]</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="b9d43e0d-db34-41f4-a4fd-a29e106d638a" type="PythonNodeModels.PythonNode" nickname="Tag Distribution Script" x="2291.13864233826" y="234.398404071235" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr

clr.AddReference("RevitServices")
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument

import System
import sys
pf_path = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)
sys.path.append('%s\IronPython 2.7\Lib' % pf_path)
import csv

clr.AddReference('RevitAPI')
import Autodesk.Revit.DB as DB

clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.Elements)

def tagHeight(bb):
	min = bb.Min
	max = bb.Max
	return abs(max.Z - min.Z)

view = doc.ActiveView
def distributeTags(tags, elbowVector=None):
	tags = sorted(tags, key=lambda t: t.LeaderEnd.Z)
	tagHeights = map(tagHeight, [t.get_BoundingBox(view) for t in tags])
	half = sum(tagHeights) / 2
	
	z1 = tags[0].TagHeadPosition.Z
	for i in xrange(len(tags)):
		oldPt = tags[i].TagHeadPosition
		if oldPt.Z &lt; z1:
			newPt = DB.XYZ(oldPt.X, oldPt.Y, z1)
			tags[i].TagHeadPosition = newPt
		elif oldPt.Z &gt;= z1:
			z1 = oldPt.Z
			newPt = oldPt
		if i + 1 &lt; len(tags): z1 += (tagHeights[i]*0.6 + tagHeights[i+1]*0.6)
		
		if elbowVector is not None:
			tags[i].LeaderElbow = newPt + elbowVector
	return
	
path = str(IN[0])
addElbow = IN[1]

with open(path, "r") as f:
	shouldRun, rightId, leftId = f.readlines()

shouldRun = int(shouldRun)
if shouldRun:
	rightTags = [doc.GetElement(DB.ElementId(int(i))) for i in rightId.split(",") if i.strip()]
	leftTags =[doc.GetElement(DB.ElementId(int(i))) for i in leftId.split(",") if i.strip()]
	TransactionManager.Instance.EnsureInTransaction(doc)
	if rightTags:
		elbowVector = view.RightDirection.Negate() * 0.4 if addElbow else None
		distributeTags(rightTags, elbowVector)
	if leftTags:
		elbowVector = view.RightDirection * 0.4 if addElbow else None
		distributeTags(leftTags, elbowVector)
	
	TransactionManager.Instance.TransactionTaskDone()
	OUT = [t.ToDSType(1) for t in rightTags], [t.ToDSType(1) for t in leftTags]
else:
	with open(path, 'w') as f:
		f.write("1\n")
		f.write(rightId)
		f.write(leftId)
	OUT = "Run again", ""</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="d29a0b70-cc2d-4b2b-b74b-2b7382402519" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="List.FilterByBoolMask" x="1058.08398158502" y="91.2446381056527" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="DSCoreNodes.dll" function="DSCore.List.FilterByBoolMask@var[]..[],var[]..[]">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="adebc225-25e2-4c90-b540-bdb5c8348207" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="847.98894305611" y="100.256991351523" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="tags = r[0];&#xA;isRight = r[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <CoreNodeModels.CreateList guid="1267530b-8f0e-45c3-a4ff-e3dbc48cdfbc" type="CoreNodeModels.CreateList" nickname="List.Create" x="1259.17549823279" y="62.2083845238015" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
    </CoreNodeModels.CreateList>
    <PythonNodeModels.PythonNode guid="db4da3b4-8b9a-461f-afc8-7e662d6613e8" type="PythonNodeModels.PythonNode" nickname="GetATempPath" x="1513.86057276836" y="17.3651420869498" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" inputcount="0">
      <Script>import System

OUT = System.IO.Path.GetTempFileName().Replace(".tmp", ".csv")</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="7ce56f17-ea55-4d81-b3f2-5d736b2cbe3d" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="CSV.WriteToFile" x="1751.28803734335" y="36.7428044476203" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="DSCoreNodes.dll" function="DSCore.IO.CSV.WriteToFile@string,var[][]">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <CoreNodeModels.Input.FileObject guid="feaef797-4063-427b-9e5e-4ffcf6bfd4c9" type="CoreNodeModels.Input.FileObject" nickname="File.FromPath" x="1754.28114656615" y="182.517175363748" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </CoreNodeModels.Input.FileObject>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="1bc1bdbc-7698-4510-8e9e-c87a7f6802ca" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1060.86493262545" y="7.22933080521949" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="shouldRun = 0;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="710d43ac-aea6-493d-9ed7-2b2f7edea1cf" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Passthrough" x="1978.83849784431" y="158.01799612985" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <ID value="ecce77dc-1290-438e-a056-970b256fd553" />
      <Name value="Passthrough" />
      <Description value="Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node." />
      <Inputs>
        <Input value="passThrough" />
        <Input value="waitFor" />
      </Inputs>
      <Outputs>
        <Output value="passThrough" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <CoreNodeModels.Watch guid="e877f3b3-b7c2-483a-bbb8-566bfa84c7fa" type="CoreNodeModels.Watch" nickname="Right Tags" x="-228.651790351936" y="479.672072154803" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </CoreNodeModels.Watch>
    <CoreNodeModels.Input.BoolSelector guid="5d17bc29-63e1-455c-a93e-17c2c71d3fe0" type="CoreNodeModels.Input.BoolSelector" nickname="Refresh The View" x="-229.247442774443" y="344.127055454891" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="2eaa951f-8762-4a94-837d-a96f1f3f8c7b" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2478.53700124463" y="240.564233694523" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="right = r[0];&#xA;left = r[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <CoreNodeModels.Watch guid="61754dd8-d42f-476f-b76c-4aa3259ad8d2" type="CoreNodeModels.Watch" nickname="Left Tags" x="-8.18988232482286" y="479.672072154803" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </CoreNodeModels.Watch>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="1ca3bec4-d8a9-47cb-a0a8-1e53ed5e7aae" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-975.61157434483" y="-56.1372220596215" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="/*&#xA;&#xA;DYNAMO VERSION: 1.3x&#xA;&#xA;Created by: Dimitar Venkov&#xA;Created on: 14/01/2019&#xA;&#xA;Modified by:&#xA;Modified on:&#xA;&#xA;REQUIRED PACKAGES:&#xA;------------------------------&#xA;- Clockwork 1.32.0&#xA;&#xA;DESCRIPTION:&#xA;------------------------------&#xA;- This graph will material tag all Gemeric Model&#xA;  Model-In-Place families. The execution is broken&#xA;  up into two parts - a tag creation part and a&#xA;  tag distribution part. That means you have to&#xA;  run the graph *TWICE* consecutively.&#xA;&#xA;ISSUES AND LIMITATIONS:&#xA;------------------------------&#xA;- If working in Revit 2018 or earlier, make sure&#xA;  that you have only one instance of Revit open&#xA;  during execution.&#xA;&#xA;*/;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="ab1375bc-8084-4a38-a3ea-4f9d5ebf9ab1" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-229.247442774443" y="25.4052640051136" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="Category.ByName(&quot;Generic Models&quot;);" ShouldFocus="false" />
    <CoreNodeModels.Input.IntegerSlider guid="e1638745-079d-4b4a-a1ec-8c666a8a5a23" type="CoreNodeModels.Input.IntegerSlider" nickname="Tag Placement Mode" x="-229.247442774443" y="197.266159730002" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Int32>2</System.Int32>
      <Range min="0" max="2" step="1" />
    </CoreNodeModels.Input.IntegerSlider>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="97ddea52-f3b9-4091-b7f4-ef9aa6cfc501" start_index="0" end="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a1b2bdb2-2b58-47d6-9893-bbec75dc83cf" start_index="0" end="b9d43e0d-db34-41f4-a4fd-a29e106d638a" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e2ca6d49-fc50-4990-a152-972e983e3105" start_index="0" end="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="14d7e011-6fb5-4e58-bda7-a1e4198d3fee" start_index="0" end="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" start_index="0" end="adebc225-25e2-4c90-b540-bdb5c8348207" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b9d43e0d-db34-41f4-a4fd-a29e106d638a" start_index="0" end="2eaa951f-8762-4a94-837d-a96f1f3f8c7b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d29a0b70-cc2d-4b2b-b74b-2b7382402519" start_index="0" end="1267530b-8f0e-45c3-a4ff-e3dbc48cdfbc" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d29a0b70-cc2d-4b2b-b74b-2b7382402519" start_index="1" end="1267530b-8f0e-45c3-a4ff-e3dbc48cdfbc" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="adebc225-25e2-4c90-b540-bdb5c8348207" start_index="0" end="d29a0b70-cc2d-4b2b-b74b-2b7382402519" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="adebc225-25e2-4c90-b540-bdb5c8348207" start_index="1" end="d29a0b70-cc2d-4b2b-b74b-2b7382402519" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1267530b-8f0e-45c3-a4ff-e3dbc48cdfbc" start_index="0" end="7ce56f17-ea55-4d81-b3f2-5d736b2cbe3d" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="db4da3b4-8b9a-461f-afc8-7e662d6613e8" start_index="0" end="7ce56f17-ea55-4d81-b3f2-5d736b2cbe3d" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="db4da3b4-8b9a-461f-afc8-7e662d6613e8" start_index="0" end="feaef797-4063-427b-9e5e-4ffcf6bfd4c9" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7ce56f17-ea55-4d81-b3f2-5d736b2cbe3d" start_index="0" end="710d43ac-aea6-493d-9ed7-2b2f7edea1cf" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="feaef797-4063-427b-9e5e-4ffcf6bfd4c9" start_index="0" end="710d43ac-aea6-493d-9ed7-2b2f7edea1cf" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1bc1bdbc-7698-4510-8e9e-c87a7f6802ca" start_index="0" end="1267530b-8f0e-45c3-a4ff-e3dbc48cdfbc" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="710d43ac-aea6-493d-9ed7-2b2f7edea1cf" start_index="0" end="b9d43e0d-db34-41f4-a4fd-a29e106d638a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5d17bc29-63e1-455c-a93e-17c2c71d3fe0" start_index="0" end="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2eaa951f-8762-4a94-837d-a96f1f3f8c7b" start_index="0" end="e877f3b3-b7c2-483a-bbb8-566bfa84c7fa" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2eaa951f-8762-4a94-837d-a96f1f3f8c7b" start_index="1" end="61754dd8-d42f-476f-b76c-4aa3259ad8d2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ab1375bc-8084-4a38-a3ea-4f9d5ebf9ab1" start_index="0" end="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e1638745-079d-4b4a-a1ec-8c666a8a5a23" start_index="0" end="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" end_index="2" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="cdacb71c-3d83-43ef-895a-70b33be513b0" text="In our particular case all elements are&#xD;&#xA;modeled as Generic Models" x="-464.189325954711" y="63.3825475373775" />
    <Dynamo.Graph.Notes.NoteModel guid="4c569e4d-db89-4c78-a140-f7fd9771b107" text="This is the depth at which  elements&#xD;&#xA;will be tagged.  Try to keep it to a realistic&#xD;&#xA;view depth. Can act as a Refresh switch too." x="-497.189325954711" y="129.91585817444" />
    <Dynamo.Graph.Notes.NoteModel guid="2a8fce64-8c28-4694-95e9-0dfcc3643a46" text="After running the graphfor the first time, Dynamo can't guess when you've made any changes inside Revit. Toggle the &quot;Refresh&quot; bool once to notify Dynamo of any changes. This may include but is not limited to:&#xD;&#xA;   - changing the active view&#xD;&#xA;   - editing the view crop box&#xD;&#xA;   - editing the view scale" x="-542.669029852418" y="355.876180132872" />
    <Dynamo.Graph.Notes.NoteModel guid="bffd51c7-43db-4912-a876-3298353666d5" text="This slider controls the final position&#xD;&#xA;of the tags:&#xD;&#xA;0 - automatic mode&#xD;&#xA;1 - place all tags LEFT&#xD;&#xA;2 - place all tags RIGHT" x="-458.189325954711" y="209.33623134239" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="215a25c8-77f5-4854-841b-a8ead1231e1b" annotationText="INPUT:" left="-239.247442774443" top="-20.5947359948864" width="330" height="432.721791449777" fontSize="30" InitialTop="25.4052640051136" InitialHeight="463.708175620675" TextblockHeight="36" backgrouund="#FFC1D676">
      <Models ModelGuid="97ddea52-f3b9-4091-b7f4-ef9aa6cfc501" />
      <Models ModelGuid="a1b2bdb2-2b58-47d6-9893-bbec75dc83cf" />
      <Models ModelGuid="5d17bc29-63e1-455c-a93e-17c2c71d3fe0" />
      <Models ModelGuid="ab1375bc-8084-4a38-a3ea-4f9d5ebf9ab1" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="6f4bd620-89cd-4cdf-bcc6-b55fbbcdef17" annotationText="Part 1 : Tag Creation" left="670.581730692949" top="-38.7706691947805" width="718.593767539843" height="354.39325064352" fontSize="30" InitialTop="7.22933080521949" InitialHeight="313.140536588638" TextblockHeight="36" backgrouund="#FFD8D8D8">
      <Models ModelGuid="8a8bbd29-e33f-490a-bdb6-19542d54a0d4" />
      <Models ModelGuid="d29a0b70-cc2d-4b2b-b74b-2b7382402519" />
      <Models ModelGuid="adebc225-25e2-4c90-b540-bdb5c8348207" />
      <Models ModelGuid="1267530b-8f0e-45c3-a4ff-e3dbc48cdfbc" />
      <Models ModelGuid="1bc1bdbc-7698-4510-8e9e-c87a7f6802ca" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="614beecd-3ae0-4770-bb82-c1cd4c074aa4" annotationText="Part 2 : Tag Distribution" left="1503.86057276836" top="-28.6348579130502" width="1140.67642847626" height="372.199091607573" fontSize="30" InitialTop="17.3651420869498" InitialHeight="347.17220367226" TextblockHeight="36" backgrouund="#FFD8D8D8">
      <Models ModelGuid="b9d43e0d-db34-41f4-a4fd-a29e106d638a" />
      <Models ModelGuid="db4da3b4-8b9a-461f-afc8-7e662d6613e8" />
      <Models ModelGuid="7ce56f17-ea55-4d81-b3f2-5d736b2cbe3d" />
      <Models ModelGuid="feaef797-4063-427b-9e5e-4ffcf6bfd4c9" />
      <Models ModelGuid="710d43ac-aea6-493d-9ed7-2b2f7edea1cf" />
      <Models ModelGuid="2eaa951f-8762-4a94-837d-a96f1f3f8c7b" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="13f3d1b5-bfed-49fa-8caa-5c89070c295d" annotationText="Report" left="-238.651790351936" top="433.672072154803" width="348.461908027114" height="424" fontSize="30" InitialTop="479.672072154803" InitialHeight="132.725043959943" TextblockHeight="36" backgrouund="#FFBB87C6">
      <Models ModelGuid="e877f3b3-b7c2-483a-bbb8-566bfa84c7fa" />
      <Models ModelGuid="61754dd8-d42f-476f-b76c-4aa3259ad8d2" />
    </Dynamo.Graph.Annotations.AnnotationModel>
    <Dynamo.Graph.Annotations.AnnotationModel guid="7dc5cda6-a975-4bcc-bb6f-438cc32d032b" annotationText="Verify" left="233.0974902379" top="327.860610342805" width="254" height="222.141635124136" fontSize="30" InitialTop="373.860610342805" InitialHeight="206.141635124136" TextblockHeight="36" backgrouund="#FFFFAA45">
      <Models ModelGuid="e2ca6d49-fc50-4990-a152-972e983e3105" />
      <Models ModelGuid="14d7e011-6fb5-4e58-bda7-a1e4198d3fee" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="7.9616584777832" eyeY="44.010570526123" eyeZ="-10.7294301986694" lookX="-4.16684484481812" lookY="-0.136738806962967" lookZ="0.0225908905267715" upX="0.182232841849327" upY="0.983254849910736" upZ="-0.000987990526482463" />
  </Cameras>
</Workspace>